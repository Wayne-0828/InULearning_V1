services:
  # =============================================================================
  # 資料庫服務
  # =============================================================================
  
  postgresql:
    image: postgres:15-alpine
    container_name: inulearning_postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ../config/database/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inulearning_network
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: inulearning_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ../config/database/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - inulearning_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: inulearning_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ../config/database/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - inulearning_network
    restart: unless-stopped

  # =============================================================================
  # 向量資料庫
  # =============================================================================
  
  milvus:
    image: milvusdb/milvus:v2.3.4
    container_name: inulearning_milvus
    environment:
      ETCD_USE_EMBED: "true"
      ETCD_DATA_DIR: "/var/lib/milvus/etcd"
      ETCD_CONFIG_PATH: "/milvus/configs/etcd.yaml"
      MILVUS_DATA_DIR: "/var/lib/milvus"
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
      - ../config/database/milvus/milvus.yaml:/milvus/configs/milvus.yaml:ro
    networks:
      - inulearning_network
    restart: unless-stopped

  # =============================================================================
  # 對象儲存
  # =============================================================================
  
  minio:
    image: minio/minio:latest
    container_name: inulearning_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
      - ../config/database/minio/init-buckets.sh:/docker-entrypoint-initdb.d/init-buckets.sh:ro
    command: server /data --console-address ":9001"
    networks:
      - inulearning_network
    restart: unless-stopped

  # =============================================================================
  # 訊息佇列
  # =============================================================================
  
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: inulearning_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - inulearning_network
    restart: unless-stopped

  # =============================================================================
  # API Gateway
  # =============================================================================
  
  nginx:
    image: nginx:1.25-alpine
    container_name: inulearning_nginx
    ports:
      - "8000:80"
    volumes:
      - ../config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../config/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - auth-service
      - learning-service
      - question-bank-service
      - ai-analysis-service
    networks:
      - inulearning_network
    restart: unless-stopped

  # =============================================================================
  # 後端微服務
  # =============================================================================
  
  auth-service:
    build:
      context: ../../2_implementation/backend/auth-service
      dockerfile: Dockerfile
    container_name: inulearning_auth_service
    environment:
      - ENVIRONMENT=development
      - POSTGRES_HOST=postgresql
      - REDIS_HOST=redis
    ports:
      - "8001:8001"
    depends_on:
      - postgresql
      - redis
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/auth-service:/app
      - /app/__pycache__

  learning-service:
    build:
      context: ../../2_implementation/backend/learning-service
      dockerfile: Dockerfile
    container_name: inulearning_learning_service
    environment:
      - ENVIRONMENT=development
      - POSTGRES_HOST=postgresql
      - MONGODB_HOST=mongodb
      - REDIS_HOST=redis
      - AI_ANALYSIS_SERVICE_URL=http://ai-analysis-service:8004
    ports:
      - "8002:8002"
    depends_on:
      - postgresql
      - mongodb
      - redis
      - ai-analysis-service
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/learning-service:/app
      - /app/__pycache__

  question-bank-service:
    build:
      context: ../../2_implementation/backend/question-bank-service
      dockerfile: Dockerfile
    container_name: inulearning_question_bank_service
    environment:
      - ENVIRONMENT=development
      - MONGODB_HOST=mongodb
      - MINIO_HOST=minio
      - MINIO_PORT=9000
    ports:
      - "8003:8003"
    depends_on:
      - mongodb
      - minio
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/question-bank-service:/app
      - /app/__pycache__

  ai-analysis-service:
    build:
      context: ../../2_implementation/backend/ai-analysis-service
      dockerfile: Dockerfile
    container_name: inulearning_ai_analysis_service
    environment:
      - ENVIRONMENT=development
      - MONGODB_HOST=mongodb
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8004:8004"
    depends_on:
      - mongodb
      - milvus
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/ai-analysis-service:/app
      - /app/__pycache__

  parent-dashboard-service:
    build:
      context: ../../2_implementation/backend/parent-dashboard-service
      dockerfile: Dockerfile
    container_name: inulearning_parent_dashboard_service
    environment:
      - ENVIRONMENT=development
      - AUTH_SERVICE_URL=http://auth-service:8001
      - LEARNING_SERVICE_URL=http://learning-service:8002
      - AI_ANALYSIS_SERVICE_URL=http://ai-analysis-service:8004
    ports:
      - "8005:8005"
    depends_on:
      - auth-service
      - learning-service
      - ai-analysis-service
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/parent-dashboard-service:/app
      - /app/__pycache__

  teacher-management-service:
    build:
      context: ../../2_implementation/backend/teacher-management-service
      dockerfile: Dockerfile
    container_name: inulearning_teacher_management_service
    environment:
      - ENVIRONMENT=development
      - AUTH_SERVICE_URL=http://auth-service:8001
      - LEARNING_SERVICE_URL=http://learning-service:8002
      - AI_ANALYSIS_SERVICE_URL=http://ai-analysis-service:8004
    ports:
      - "8006:8006"
    depends_on:
      - auth-service
      - learning-service
      - ai-analysis-service
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/teacher-management-service:/app
      - /app/__pycache__

  notification-service:
    build:
      context: ../../2_implementation/backend/notification-service
      dockerfile: Dockerfile
    container_name: inulearning_notification_service
    environment:
      - ENVIRONMENT=development
      - AUTH_SERVICE_URL=http://auth-service:8001
      - LEARNING_SERVICE_URL=http://learning-service:8002
      - AI_ANALYSIS_SERVICE_URL=http://ai-analysis-service:8004
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "8007:8007"
    depends_on:
      - auth-service
      - learning-service
      - ai-analysis-service
      - rabbitmq
    networks:
      - inulearning_network
    restart: unless-stopped
    volumes:
      - ../../2_implementation/backend/notification-service:/app
      - /app/__pycache__

  # =============================================================================
  # 前端應用 (開發環境使用簡單的 HTTP 伺服器)
  # =============================================================================
  
  student-app:
    image: nginx:1.25-alpine
    container_name: inulearning_student_app
    ports:
      - "3000:80"
    volumes:
      - ../../2_implementation/frontend/student-app:/usr/share/nginx/html:ro
      - ../config/nginx/student-app.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - inulearning_network
    restart: unless-stopped

  parent-app:
    image: nginx:1.25-alpine
    container_name: inulearning_parent_app
    ports:
      - "3001:80"
    volumes:
      - ../../2_implementation/frontend/parent-app:/usr/share/nginx/html:ro
      - ../config/nginx/parent-app.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - inulearning_network
    restart: unless-stopped

  teacher-app:
    image: nginx:1.25-alpine
    container_name: inulearning_teacher_app
    ports:
      - "3002:80"
    volumes:
      - ../../2_implementation/frontend/teacher-app:/usr/share/nginx/html:ro
      - ../config/nginx/teacher-app.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - inulearning_network
    restart: unless-stopped

  # =============================================================================
  # 監控工具 (可選)
  # =============================================================================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: inulearning_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../config/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - inulearning_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: inulearning_grafana
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ../config/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - inulearning_network
    restart: unless-stopped

# =============================================================================
# 網路配置
# =============================================================================

networks:
  inulearning_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# 資料卷配置
# =============================================================================

volumes:
  postgresql_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  milvus_data:
    driver: local
  minio_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local 